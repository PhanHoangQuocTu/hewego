{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contract-flattens/BondERC1155Token/BondERC1155Token_flatten.sol":"ERC165"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[],"viaIR":true},"sources":{"contract-flattens/BondERC1155Token/BondERC1155Token_flatten.sol":{"keccak256":"0xa61f14600b48710c566c7d7d7b985a21ee2322768471caac8ed8bb310053ee00","license":"MIT","urls":["bzz-raw://bc40d9e458b3d222902ac845193acb2143fee54f38e2a414a106251dea6f6a6c","dweb:/ipfs/QmUnU3kmKkrYPL6wyE4ogmyEyrrwswUQf6siCUmDT2mQjU"]}},"version":1}